// App.js
import React, { useState, useEffect } from 'react';
import { View, Text, TextInput, Button, Image, StyleSheet } from 'react-native';
import axios from 'axios';
import Geolocation from '@react-native-community/geolocation';

const API_KEY = 'SUA_API_KEY'; // Insira sua chave de API do OpenWeatherMap

const App = () => {
   const [city, setCity] = useState('');
   const [weather, setWeather] = useState(null);

   useEffect(() => {
       // Obtém a localização inicial do usuário
       Geolocation.getCurrentPosition(
           async position => {
               const { latitude, longitude } = position.coords;
               await fetchWeatherByLocation(latitude, longitude);
           },
           error => console.error(error),
           { enableHighAccuracy: true, timeout: 15000, maximumAge: 10000 }
       );
   }, []);

   const fetchWeather = async () => {
       try {
           const response = await axios.get(
               `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric&lang=pt`
           );
           setWeather(response.data);
       } catch (error) {
           console.error('Erro ao buscar dados:', error);
       }
   };

   const fetchWeatherByLocation = async (lat, lon) => {
       try {
           const response = await axios.get(
               `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric&lang=pt`
           );
           setWeather(response.data);
       } catch (error) {
           console.error('Erro ao buscar dados:', error);
       }
   };

   return (
       <View style={styles.container}>
           <Text style={styles.title}>Previsão do Tempo</Text>
           <TextInput
               style={styles.input}
               placeholder="Digite o nome da cidade"
               value={city}
               onChangeText={setCity}
           />
           <Button title="Buscar" onPress={fetchWeather} />
           {weather && (
               <View style={styles.weatherContainer}>
                   <Text style={styles.cityName}>{weather.name}</Text>
                   <Text style={styles.temperature}>{weather.main.temp}°C</Text>
                   <Text>{weather.weather[0].description}</Text>
                   <Image
                       style={styles.icon}
                       source={{ uri: `http://openweathermap.org/img/w/${weather.weather[0].icon}.png` }}
                   />
               </View>
           )}
       </View>
   );
};

const styles = StyleSheet.create({
   container: {
       flex: 1,
       justifyContent: 'center',
       alignItems: 'center',
       padding: 20,
   },
   title: {
       fontSize: 24,
       fontWeight: 'bold',
       marginBottom: 20,
   },
   input: {
       height: 40,
       borderColor: '#ccc',
       borderWidth: 1,
       borderRadius: 5,
       paddingHorizontal: 10,
       marginBottom: 10,
       width: '100%',
   },
   weatherContainer: {
       marginTop: 20,
       alignItems: 'center',
   },
   cityName: {
       fontSize: 22,
       fontWeight: 'bold',
   },
   temperature: {
       fontSize: 50,
       fontWeight: 'bold',
   },
   icon: {
       width: 100,
       height: 100,
   },
});

export default App;
